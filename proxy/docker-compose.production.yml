#websites/proxy/docker-compose.yml
# version: "3.8" is deprecated we're in v2

services:
  proxy:
    build: .
    container_name: nginx-proxy
    restart: unless-stopped

    ports:
      - "80:80"
      - "443:443"

    volumes:
      # 1) Main nginx config
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

      # 2) Load individual vhosts
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/snippets:/etc/nginx/snippets:ro

      # 3) Certbot (webroot + live certs + logs)
      - certbot_www:/var/www/certbot:ro
      - certbot_conf:/etc/letsencrypt:ro
      - certbot_logs:/var/log/letsencrypt:rw

      # 4) Bot-blocker includes
      - ./botblocker/repo/conf.d/globalblacklist.conf:/etc/nginx/blocker-conf/globalblacklist.conf:ro
      - ./botblocker/repo/bots.d:/etc/nginx/bots.d:ro
      - ./botblocker/repo/ddos.d:/etc/nginx/ddos.d:ro
      - ./botblocker/repo/deny.d:/etc/nginx/deny.d:ro

      # 5) Access + error logs
      - nginx_logs:/var/log/nginx:rw

      # 6) (Optional) your helper scripts if you plan to invoke them inside the container
      - ./scripts:/usr/local/bin/scripts:ro

    networks:
      - webnet

    depends_on:
      certbot:
        condition: service_healthy

  certbot:
    image: certbot/certbot:latest
    restart: unless-stopped

    entrypoint: >
      /bin/sh -c '
        trap exit TERM;
        while :; do
          certbot renew \
            --webroot --webroot-path=/var/www/certbot \
            --deploy-hook "nginx -s reload";
          sleep 12h & wait $${!};
        done;
      '

    volumes:
      - certbot_www:/var/www/certbot:rw
      - certbot_conf:/etc/letsencrypt:rw
      - certbot_logs:/var/log/letsencrypt:rw

    healthcheck:
      test: ["CMD", "test", "-d", "/var/www/certbot/.well-known"]
      interval: 1m
      retries: 3

volumes:
  certbot_www:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./certbot/www

  certbot_conf:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./certbot/conf

  certbot_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./certbot/logs

  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./nginx-logs

networks:
  webnet:
